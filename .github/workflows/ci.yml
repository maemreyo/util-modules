name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type checking
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test:coverage

      - name: Build packages
        run: pnpm build

      - name: Run audit
        run: pnpm audit

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  affected-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run affected build
        run: pnpm affected:build --base=origin/main

      - name: Run affected test
        run: pnpm affected:test --base=origin/main

      - name: Run affected lint
        run: pnpm affected:lint --base=origin/main

  submodule-health:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check submodule status
        run: |
          echo "=== Submodule Status ==="
          git submodule status

          echo "=== Checking for uncommitted changes in submodules ==="
          git submodule foreach 'git status --porcelain'

          echo "=== Checking submodule branches ==="
          git submodule foreach 'echo "Submodule: $name - Branch: $(git branch --show-current)"'

      - name: Verify submodule integrity
        run: |
          # Check if all submodules are properly initialized
          if git submodule status | grep -q '^-'; then
            echo "❌ Some submodules are not initialized"
            exit 1
          fi

          # Check if any submodules have uncommitted changes
          if git submodule foreach 'git status --porcelain' | grep -q .; then
            echo "⚠️ Some submodules have uncommitted changes"
            git submodule foreach 'git status --porcelain'
          fi

          echo "✅ All submodules are healthy"
